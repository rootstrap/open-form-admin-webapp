// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
.c4 {
  display: none;
  border: none;
  outline: none;
  cursor: pointer;
  background: none;
  position: relative;
  top: 0;
  left: 0;
  height: 1.5rem;
  width: 1.5rem;
  margin-right: 1rem;
}

.c5.enter {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.c5.enter-active {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
}

.c5.enter-done {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c5.exit {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c5.exit-active {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: -webkit-transform 250ms;
  -webkit-transition: transform 250ms;
  transition: transform 250ms;
}

.c1 {
  font-weight: 600;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.1em 0.2em;
  color: #56ccf2;
  padding-left: 1rem;
}

.c2 {
  display: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  list-style: none;
  margin: 0 0.75em;
  padding: 0;
  word-wrap: break-word;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 > li {
  display: inline-block;
  margin: 0 1rem;
}

.c6 {
  height: 1.5rem;
  width: 1.5rem;
  position: absolute;
  top: 0;
  left: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #f2f2f2;
  height: 3rem;
}

@media (max-width:50em) {
  .c4 {
    display: none;
  }
}

@media (max-width:50em) {
  .c2 {
    display: none;
  }
}

@media (max-width:50em) {
  .c0 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    position: fixed;
    width: 100%;
    left: 0;
    top: 0;
  }
}

<nav
  className="c0"
>
  <a
    className="c1"
    href="/"
    onClick={[Function]}
  >
    <svg
      fill="none"
      height="21"
      viewBox="0 0 51 21"
      width="51"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M47.111 0L30.483 15.9948C27.8207 9.20742 20.5304 5.18777 13.0963 6.40841C5.66223 7.62905 0.170853 13.7474 0 21H5.50501C5.69649 15.8218 10.021 11.669 15.4045 11.4937C20.788 11.3183 25.3946 15.1802 25.9498 20.3341L25.8961 20.3964C25.9831 20.6279 25.9998 20.8219 26.0053 21H32.9745L51 3.70002L47.111 0Z"
        fill="#161631"
      />
    </svg>
  </a>
  <div
    className="c2"
  >
    <ul
      className="c3"
    >
      navigation
    </ul>
  </div>
  <button
    className="c4"
    onClick={[Function]}
  >
    <svg
      className="c5 c6"
      fill="none"
      height="8"
      viewBox="0 0 15 8"
      width="15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.48242 1L7.48242 7L13.4824 1"
        stroke="#4F4F4F"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
      />
    </svg>
  </button>
</nav>
`;
